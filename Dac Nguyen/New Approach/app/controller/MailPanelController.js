/*
 * File: app/controller/MailPanelController.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EmailPrototype.controller.MailPanelController', {
    extend: 'EmailPrototype.controller.AbstractFdController',

    config:{
        mailtreePanel: null,
        todoPanel: null,
    },

    init: function(application) {
          var me = this;

        mailtreePanel = me.createController('MailTreePanelController');
        todoPanel = me.createController('TodoListPanelController');

       // var mailtreeViewId = 'mailtreepanel#' + mailtreePanel.getViewId('mailtreepanel');
        //debugger;

        this.control({
            'mailtreepanel': {
                expand: this.onTreepanelExpand,
                select: this.onFoldertreeSelect
            },
            'todolistpanel': {
                expand: this.onTodoPanelExpand,
                select: this.onTodoPanelSelect
            }
        });
    },


  getViewItems: function(){
    var me = this,
        controllerId, controller, nestedView,
        i = 0,
        items = new Array();
    
    for (; i < me.dynamicControllers.length; i++){
      controllerId = me.dynamicControllers[i];
      controller = me.getController(controllerId);
      nestedView = controller.getViewConfig();
      if (nestedView){
        nestedView = Ext.apply(nestedView, {});
        items.push(nestedView);
      }
    }
    
    return items;
  },

    getViewConfig:function(){
        var me = this, containedItems, cfg;

        var viewId = me.getViewId('mailpanel');
        containedItems = me.getViewItems();
      //  debugger; // MAILLLLL >> 2 objs. OK
        cfg = {
            xtype: 'mailpanel',
            itemId: viewId,
            items: containedItems
        }
        return cfg;
    },
    
    onTreepanelExpand: function(p, eOpts) {
        alert('TreePanelExpended');
         var mainpanel = Ext.ComponentQuery.query('mainpanel')[0];
         var containPanelCenter = mainpanel.down('container#contentpanelCenter');
        containPanelCenter.removeAll();
        containPanelCenter.add({xtype:'mailgrid'});

        var infoPanel = mainpanel.down('informationpanel');
        infoPanel.show();
        var propertyPanel = infoPanel.down('panel#properties');
        if(propertyPanel.items.length > 0) {
            propertyPanel.removeAll();
        }
        propertyPanel.add({html: 'Please select 1 item only to view property'});

        var previewPanel = mainpanel.down('panel#previewpanel');
        previewPanel.show();
        var displayPreview = previewPanel.down('textareafield#displaypreview');
        displayPreview.setValue('Please select 1 item only to view property');

    },

    onTodoPanelExpand: function(p, eOpts) {
    //    console.log('TodoPanelExpended');
        var mainpanel = Ext.ComponentQuery.query('mainpanel')[0];
        var containPanelCenter = mainpanel.down('container#contentpanelCenter');
        containPanelCenter.removeAll();
        containPanelCenter.add({xtype:'todogrid'});

        var infoPanel = mainpanel.down('informationpanel');
        infoPanel.hide();

        var previewPanel = mainpanel.down('panel#previewpanel');
        previewPanel.hide();
    },

    onFoldertreeSelect: function(rowmodel, record, index, eOpts) {
   //     console.log('foldertree select');
        var mailGrid = Ext.ComponentQuery.query('mailgrid')[0];
        //debugger;
        mailGrid.reconfigure(record.messages());


    },

    onTodoPanelSelect: function(rowmodel, record, index, eOpts) {
    //    console.log('onTodoPanelSelect');
        var todoGrid = Ext.ComponentQuery.query('todogrid')[0];
        //var mailGrid = mainPanel.down('mailgrid');
        //debugger;
        todoGrid.reconfigure(record.todos());
    },

    

});
