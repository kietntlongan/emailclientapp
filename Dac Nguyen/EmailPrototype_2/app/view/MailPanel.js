/*
 * File: app/view/MailPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EmailPrototype.view.MailPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.mailpanel',

    requires: [
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel'
    ],

    width: 200,
    layout: 'accordion',
    title: 'Mail Panel',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'treepanel',
                    itemId: 'foldertree',
                    collapseFirst: false,
                    title: 'Mail',
                    store: 'MailTreeStore',
                    displayField: 'folder',
                    rootVisible: false,
                    viewConfig: {

                    }
                },
                {
                    xtype: 'gridpanel',
                    itemId: 'todopanel',
                    autoScroll: true,
                    title: 'To Dos',
                    forceFit: true,
                    hideHeaders: true,
                    rowLines: false,
                    store: 'UserStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'owner',
                            text: 'Owner'
                        }
                    ],
                    selModel: Ext.create('Ext.selection.RowModel', {

                    })
                }
            ]
        });

        me.callParent(arguments);
    }

});